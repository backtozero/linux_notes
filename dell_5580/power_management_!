# HOT 
# https://www.reddit.com/r/Dell/comments/5y3rii/xps_9560_battery_life_optimization_and_fan/

# SET A PREVIOUS ACPI REVISION FLAG TO WORKAROUND SOME TROUBLES
# Thanks to the mighty ArchLinux buddies I've found the trick that workarounds a few important troubles with ACPI support. (source: https://bbs.archlinux.org/viewtopic.php?id=223056). As far as I understand the most recent Linux kernels started to support ACPI revision 6 but for some reason it still has problems with the XPS 9560. Applying this setting on Ubuntu 16.04.2 is simple as adding a kernel boot parameter to grub, as the Ubuntu kernel is already compiled with the CONFIG_ACPI_REV_OVERRIDE_POSSIBLE flag enabled (at least, it is on the official hwe kernel version 4.10). I haven't found any drawback while the setting fixes and optimizes important stuff.
# Edit /etc/default/grub and add acpi_rev_override=5 to your grub default cmdline, the line should look similar to this
# acpi_rev_override IS VERY IMPORTANT !!! 
# FOR AN EXAMPLE : UBUNTU 16.04.3 + 4.13.0 KERNEL + TLP + ACPI + ACPI_DKMS RESULTS IN NONDETERMINISTIC FREEZES 
GRUB_CMDLINE_LINUX_DEFAULT="quiet splash acpi_rev_override=5"

# don't forget to run 
update-grub
reboot

# Notably the effect of this flag on my XPS is:
# Display brightness keys are now working as they should on Unity.
# The CPU frequency sits a lot more at the minimum when is idle, the temperature is a few degrees lower too.
# I was finally able to get a stable setup using nvidia drivers!

# INSTALL TLP FOR BETTER ENERGY MANAGEMENT SETTINGS

# This is very easy, just:
sudo apt install tlp tlp-rdw

# This packages automatically configure the best settings for an optimized battery life. If you have specific requirements you may want to have a look at the documentation http://linrunner.de/en/tlp/tlp.html
update
# To install the latest stable package add the official PPA
sudo add-apt-repository ppa:linrunner/tlp
sudo apt-get update

# TURN OFF THE NVIDIA GPU

# The next biggest battery sucker to take care of is the nvidia dGPU. If you don't install Nvidia drivers the dGPU is always on, but the current drivers and kernel support is not really ready yet so if you install it you may have system freezes on shutdown and reboot. (edit: see the late april update) As for the moment I don't really need the Nvidia card on Linux I ended up uninstalling all the Nvidia stuff and turning off the dGPU with a command. To turn off the Nvidia card you'll need the packages "acpi" and "acpi-call-dkms" to be installed.
sudo apt install acpi acpi-call-dkms
# I've found the command to turn off the dGPU on "acpi-call-dkms" package examples, after install you can check /usr/share/doc/acpi-call-dkms/examples/turn_off_gpu.sh
# If you run the script it executes various calls to find which one actually works on your computer. On my XPS 9560 the command to turn the nvidia 1050 off is:
echo '_SB.PCI0.PEG0.PEGP._OFF' | sudo tee /proc/acpi/call
# update: thanks to jlarky for explaining how to correctly run the command from an unprivileged user shell
# The effect of the command is really evident, the temperature is about 10° lower, the predicted battery time to empty is raised a few hours while it doesn't create any problem with the track pad or anything.
# update: thanks to jseris for sharing how to automatically turn the dGPU off at startup
# To automate on startup, do the following as root:
echo acpi_call > /etc/modules-load.d/acpi_call.conf
# Create
/usr/lib/systemd/user/dgpu-off.service
# with the following contents:
[Unit]
Description=Power-off dGPU
After=graphical.target

[Service]
Type=oneshot
ExecStart=/bin/sh -c "echo '\\_SB.PCI0.PEG0.PEGP._OFF' > /proc/acpi/call; cat /proc/acpi/call > /tmp/nvidia-off"

[Install]
WantedBy=graphical.target
Enable the new unit file:
systemctl enable /usr/lib/systemd/user/dgpu-off.service
source: https://gist.github.com/jseris/a740f6a3fb0d18064e26dc66f9be4f1d , tested with kernel: 4.9.20-040920-generic and 4.10.0-14-generic
After a reboot cat /tmp/nvidia-off should report 0x0called and the idle temp should be about 10° lower.

# GRUB

GRUB_CMDLINE_LINUX_DEFAULT="quiet splash nouveau.modeset=0 acpi_rev_override=5"
sudo update-grub

# BLUETOOTH

/etc/rc.local
rfkill block bluetooth

# MUST_HAVE
sudo apt purge --auto-remove xserver-xorg-video-nouveau

sudo nano /etc/modprobe.d/blacklist-nouveau.conf
blacklist nouveau

sudo update-initramfs -u

# after reboot check : there mustn't be any result, because kernel mustn't load this module !
lsmod | grep -i nouveau

# DON'T USE POWERTOP OR ANY SUGGESTED TUNABLES FEATURES ! IT'S SUCKS !

# NEXT : bbswitch is our solution !
sudo apt install bbswitch-dkms

sudo nano /etc/modules
bbswitch load_state=0

update-initramfs -u

# LAST SPURT -> systemctl service for nvidia anihilation after hibernate
sudo nano /etc/systemd/system/kill_nvidia.service

[Unit]
Description=Kill Nvidia
After=suspend.target
After=hibernate.target
After=hybrid-sleep.target

[Service]
ExecStart=/bin/sh -c "echo '\\_SB.PCI0.PEG0.PEGP._OFF' > /proc/acpi/call; cat /proc/acpi/call > /tmp/nvidia-off"

[Install]
WantedBy=suspend.target
WantedBy=hibernate.target
WantedBy=hybrid-sleep.target

sudo systemctl enable kill_nvidia.service

systemctl status kill_nvidia.service

#!
# after the above adjustments the average energy consumption during coding / browsing / rare build tasks is about 8-9w/h
#!
