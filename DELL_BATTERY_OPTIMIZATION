<div class="usertext-body may-blank-within md-container "><div class="md"><blockquote>
<p>This guide is part of a series about tuning Ubuntu 16.04.2 on the XPS 9560:</p>

<p>1: XPS 9560 - Battery life optimization and fan management  (this guide)</p>

<p>2: <a href="https://www.reddit.com/r/Dell/comments/646y0t/xps_9560_setting_up_multitouch_gestures_with/">XPS 9560 - setting up multitouch gestures with Ubuntu 16.04</a></p>
</blockquote>

<p>I'm pretty happy with my XPS 9560 dual-boot setup with Ubuntu.
As it took quite a lot of time to find what and how to setup some packages I'm sharing it here.
I've installed a fresh copy of Ubuntu 16.04.2, the following guide is based on it.
On my i7-16GB-512GB-FHD now I've 10 hours of battery life, the temperature at idle is under 40째 and less than 50째 on heavy web browsing,  the fans are almost always turned off.</p>

<hr>

<p>SET A PREVIOUS ACPI REVISION FLAG TO WORKAROUND SOME TROUBLES</p>

<h2><sup><strong>late april update</strong></sup></h2>

<p>Thanks to the mighty ArchLinux buddies I've found the trick that workarounds a few important troubles with ACPI support. (source: <a href="https://bbs.archlinux.org/viewtopic.php?id=223056">https://bbs.archlinux.org/viewtopic.php?id=223056</a>).
As far as I understand the most recent Linux kernels started to support ACPI revision 6 but for some reason it still has problems with the XPS 9560. Applying this setting on Ubuntu 16.04.2 is simple as adding a kernel boot parameter to grub, as the Ubuntu kernel is already compiled with the CONFIG_ACPI_REV_OVERRIDE_POSSIBLE flag enabled (at least, it is on the official hwe kernel version 4.10). I haven't found any drawback while the setting fixes and optimizes important stuff. </p>

<p>Edit <em>/etc/default/grub</em> and add <em>acpi_rev_override=5</em> to your grub default cmdline, the line should look similar to this</p>

<pre><code>GRUB_CMDLINE_LINUX_DEFAULT="quiet splash acpi_rev_override=5"
</code></pre>

<p>don't forget to run <em>update-grub</em> and reboot.</p>

<p>Notably the effect of this flag on my XPS is:</p>

<ol>
<li>Display brightness keys are now working as they should on Unity.</li>
<li>The CPU frequency sits a lot more at the minimum when is idle, the temperature is a few degrees lower too.</li>
<li>I was finally able to get a stable setup using nvidia drivers!</li>
</ol>

<hr>

<h2>INSTALL TLP FOR BETTER ENERGY MANAGEMENT SETTINGS</h2>

<p>This is very easy, just:</p>

<pre><code>sudo apt install tlp tlp-rdw
</code></pre>

<p>This packages automatically configure the best settings for an optimized battery life.
If you have specific requirements you may want to have a look at the documentation 
<a href="http://linrunner.de/en/tlp/tlp.html">http://linrunner.de/en/tlp/tlp.html</a></p>

<p><strong>update</strong></p>

<p>To install the latest stable package add the official PPA</p>

<pre><code>sudo add-apt-repository ppa:linrunner/tlp
sudo apt-get update
</code></pre>

<hr>

<h2>TURN OFF THE NVIDIA GPU</h2>

<p>The next biggest battery sucker to take care of is the nvidia dGPU.
If you don't install Nvidia drivers the dGPU is always on, <del>but the current drivers and kernel support is not really ready yet so if you install it you may have system freezes on shutdown and reboot.</del> (edit: see the late april update)
As for the moment I don't really need the Nvidia card on Linux I ended up uninstalling all the Nvidia stuff and turning off the dGPU with a command. To turn off the Nvidia card you'll need the packages "acpi" and "acpi-call-dkms" to be installed.</p>

<pre><code>sudo apt install acpi acpi-call-dkms
</code></pre>

<p>I've found the command to turn off the dGPU on "acpi-call-dkms" package examples, after install you can check /usr/share/doc/acpi-call-dkms/examples/turn_off_gpu.sh</p>

<p>If you run the script it executes various calls to find which one actually works on your computer. On my XPS 9560 the command to turn the nvidia 1050 off is:</p>

<pre><code>echo '_SB.PCI0.PEG0.PEGP._OFF' | sudo tee /proc/acpi/call
</code></pre>

<p><sup><strong>update</strong>: thanks to jlarky for explaining how to correctly run the command from an unprivileged user shell</sup></p>

<p>The effect of the command is really evident, the temperature is about 10째 lower, the predicted battery time to empty is raised a few hours while it doesn't create any problem with the track pad or anything.</p>

<p><sup><strong>update</strong>: thanks to jseris for sharing how to automatically turn the dGPU off at startup</sup></p>

<p>To automate on startup, do the following as root: </p>

<pre><code>echo acpi_call &gt; /etc/modules-load.d/acpi_call.conf
</code></pre>

<p>Create /usr/lib/systemd/user/dgpu-off.service with the following contents:</p>

<pre><code>[Unit]
Description=Power-off dGPU
After=graphical.target

[Service]
Type=oneshot
ExecStart=/bin/sh -c "echo '\\_SB.PCI0.PEG0.PEGP._OFF' &gt; /proc/acpi/call; cat /proc/acpi/call &gt; /tmp/nvidia-off"

[Install]
WantedBy=graphical.target
</code></pre>

<p>Enable the new unit file:</p>

<pre><code>systemctl enable /usr/lib/systemd/user/dgpu-off.service
</code></pre>

<p><sup><strong>source</strong>: <a href="https://gist.github.com/jseris/a740f6a3fb0d18064e26dc66f9be4f1d">https://gist.github.com/jseris/a740f6a3fb0d18064e26dc66f9be4f1d</a> , tested with kernel: 4.9.20-040920-generic and  4.10.0-14-generic</sup></p>

<p>After a reboot <code>cat /tmp/nvidia-off</code> should report <code>0x0called</code> and the idle temp should be about 10째 lower. </p>

<hr>

<h2>UNDERVOLT WITH INTEL XTU</h2>

<p>The details about how to undervolt with Intel XTU is out of the scope of this guide, you'll find plenty of advices searching the net.
The important thing to notice here is that the settings applied with Intel XTU under Windows are saved on a processor register (edit: or in the BIOS?) and survive shutdowns and reboots (edit: not always, see the comments below for more info), so you can also run Linux on an undervolted CPU.
Download and install Intel XTU under Windows and under-volt the CPU core and GPU core. I've done a few stress tests but haven't really checked the limit on my particular i7 CPU. Setting the CPU and GPU core at  -0.120V seems completely stable here after a couple of days of intensive usage, but YMMV.</p>

<hr>

<h2>FANS MANAGEMENT</h2>

<p>This is a bit complicated, don't do it if you're not confident with your Linux skills.</p>

<p>The i8kutils package is <del>old unmaintained</del> (edit: update) maintained by Vitor Augusto, a Linux community member, with a public repository on <a href="https://github.com/vitorafsr/i8kutils">GitHub</a> and while it can manage the 2 fans separately, it only supports 0, 2400 and 4800rpm speeds.</p>

<p>On Windows I've seen the fan speed at 0, 2400, 3100, 3700, 4100, 4800, 5100 rpm</p>

<p>I wrote a <a href="https://plus.google.com/u/0/117746869077591524195/posts/iPLPC3agGKS">post</a> on <a href="https://plus.google.com/communities/114528776750711434800">Dell Project Sputnik Google+ community</a> asking the devs if they could update and improve the package, but haven't received an answer.
(edit: <a href="https://plus.google.com/u/0/117746869077591524195/posts/ZXcBiE4Yers">new post</a> with the same request and a link to this guide)</p>

<p>Please, feel free to show your support there, or to ask the Project Sputnik developers where you think is more appropriate, to maintain and improve the package.</p>

<p><strong>UPDATE</strong>
Vitor Augusto <a href="https://github.com/vitorafsr/i8kutils/issues/5">showed interest</a> to improve i8kutils with better support for the latest hardware <strong>IF</strong> Dell collaborates and releases the essential information to interface with the newer bios versions.
I wrote 2 new posts, <a href="https://www.reddit.com/r/Dell/comments/5ypmqn/to_dell_project_sputnik_developers_about_managing/">here on Reddit</a> and a new one on <a href="https://plus.google.com/117746869077591524195/posts/AygFVpctW9o">Dell Project Sputnik Google+ community</a> to publicly ask Dell to release the needed information.
If you care, please show your support on both posts.</p>

<h2>i8kutils how to</h2>

<p>At first, for peace of mind, you'll need something to check your temps at a glance.</p>

<p>1) install "lmsensor" package from the official repo</p>

<p>2) install "indicator-sensors" package from ppa:dgadomski/indicator-sensors</p>

<p>3) restart X</p>

<p>You should see a new indicator on the top bar with real time temperatures reporting.
Have a look at the preferences, select the right sensors to show, eventually set some alarms for high temps.</p>

<p>Then you can install the i8kutils package to manage the fans.</p>

<pre><code>sudo apt install i8kutils
</code></pre>

<p>Now create /etc/i8kmon.conf with something similar to my configuration</p>

<pre><code># Automatic fan control, override with --auto option
# Uncomment the following line if you want to keep i8k installed 
# but disable automatic fan control (as i8k adds some useful sensors)
# set config(auto)        0

# Status check timeout (seconds), override with --timeout option
set config(timeout)     2

# Temperature display unit (C/F), override with --unit option
set config(unit)        C

# Temperature threshold at which the temperature is displayed in red
set config(t_high)      80

# Minimum expected fan speed
set config(min_speed)   2000

# Temperature thresholds: {fan_speeds low_ac high_ac low_batt high_batt}
# These were tested on the I8000. If you have a different Dell laptop model
# you should check the BIOS temperature monitoring and set the appropriate
# thresholds here. In doubt start with low values and gradually rise them
# until the fans are not always on when the cpu is idle.
set config(0)   {{0 0}  -1  55  -1  55}
set config(1)   {{1 0}  50  60  50  60}
set config(2)   {{1 1}  55  65  55  65}
set config(3)   {{2 2}  60 128  60 128}

# end of file
</code></pre>

<p>The i8k package was originally designed for other Dell notebooks so you need to force loading the module as the XPS 9560 is not officially supported.
To force loading the module create:</p>

<p>/etc/modprobe.d/i8k.conf</p>

<p>with this content</p>

<pre><code>options i8k force=1
</code></pre>

<p>After a reboot you can notice a burst with the fans, that's is due to the bios still managing the speed in contrast with i8kutils and you'll need to write a bios register to disable it's fan management.
As misusing the command to do it is potentially dangerous, the command isn't distributed with the i8kutils binary package and you'll need to compile it by yourself.
I'm reporting here a warning as found on the source of the program itself.</p>

<ul>
<li>WARNING!!! READ CAREFULLY BEFORE USING THIS PROGRAM!!!</li>
<li>THIS PROGRAM IS VERY DANGEROUS. IT CAN CRASH YOUR COMPUTER, DESTROY DATA</li>
<li>ON THE HARDISK, CORRUPT THE BIOS, PHYSICALLY DAMAGE YOUR HARDWARE AND</li>
<li>MAKE YOUR COMPUTER TOTALLY UNUSABLE.</li>
<li>DON'T USE THIS PROGRAM UNLESS YOU REALLY KNOW WHAT YOU ARE DOING. I WILL</li>
<li>NOT BE RESPONSIBLE FOR ANY DIRECT OR INDIRECT DAMAGE CAUSED BY USING THIS</li>
<li>PROGRAM.</li>
</ul>

<p>I'm not responsible too, even if this is working beautifully on my XPS 9560 from a couple of <del>weeks</del> months don't do it at home.</p>

<pre><code>sudo apt install build-essential
sudo apt source i8kutils
sudo apt build-dep i8kutils
cd i8kutils-1.41/
make smm
sudo cp smm /usr/local/bin/
</code></pre>

<p>now you can switch bios fan management off and manage the fans with i8kmon with the commands</p>

<pre><code>sudo smm 30a3
sudo service i8kmon start
</code></pre>

<p>or switch the bios fan management back on and disable the i8kmon service</p>

<pre><code>sudo service i8kmon stop
sudo smm 31a3
</code></pre>

<p>BE AWARE THAT THE EFFECTS OF THIS COMMAND SURVIVE A REBOOT SO YOU'LL ALWAYS NEED TO SWITCH THE BIOS FAN MANAGEMENT BACK ON BEFORE REBOOTING TO WINDOWS.</p>

<p>To switch automatically to custom fan management on startup and back to bios fan management on shutdown and reboot I've created a script to put in</p>

<p>/etc/init.d/customfan.sh</p>

<pre><code>#!/bin/bash
# /etc/init.d/customfan.sh

### BEGIN INIT INFO
# Provides:          customfan
# Required-Start:    $remote_fs $syslog i8kmon
# Required-Stop:     $remote_fs $syslog i8kmon
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Dell bios fan management disabling
# Description:       This command is issued to enable/disable
#                    Dell bios fan management as it conflicts
#                    with i8kmon handling 
### END INIT INFO

PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin


case "$1" in 
    start)
        echo "Disabling Dell BIOS fan management"
        smm 30a3
        ;;
    stop)
        echo "Enabling Dell BIOS fan management"
        smm 31a3
        ;;
    *)
        echo "Usage: /etc/init.d/customfan.sh start|stop"
        exit 1
        ;;
esac

exit 0
</code></pre>

<p>to enable it on auto startup and shutdown you need to run</p>

<pre><code>sudo update-rc.d /etc/init.d/customfan.sh defaults
</code></pre>

<p>if you'll need to disable it from auto startup and shutdown for some reason</p>

<pre><code>sudo update-rc.d customfan.sh disable
</code></pre>

<p>now reboot and <a href="https://www.youtube.com/watch?v=aGSKrC7dGcY">https://www.youtube.com/watch?v=aGSKrC7dGcY</a></p>
</div>
</div>